<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>